"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    encodeBase64: function() {
        return encodeBase64;
    },
    decodeBase64: function() {
        return decodeBase64;
    }
});
const _utils = require("@metamask/utils");
const _bytes = require("./bytes");
async function encodeBase64(input) {
    const bytes = (0, _bytes.getBytes)(input);
    // In the browser, FileReader is much faster than bytesToBase64.
    if ('FileReader' in globalThis) {
        return await new Promise((resolve, reject)=>{
            const reader = Object.assign(new FileReader(), {
                onload: ()=>resolve(reader.result.replace('data:application/octet-stream;base64,', '')),
                onerror: ()=>reject(reader.error)
            });
            reader.readAsDataURL(new File([
                bytes
            ], '', {
                type: 'application/octet-stream'
            }));
        });
    }
    return (0, _utils.bytesToBase64)(bytes);
}
async function decodeBase64(base64) {
    const response = await fetch(`data:application/octet-stream;base64,${base64}`);
    return new Uint8Array(await response.arrayBuffer());
}

//# sourceMappingURL=base64.js.map