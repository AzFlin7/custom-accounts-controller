"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    SNAP_EXPORTS: function() {
        return SNAP_EXPORTS;
    },
    OnTransactionResponseStruct: function() {
        return OnTransactionResponseStruct;
    },
    OnSignatureResponseStruct: function() {
        return OnSignatureResponseStruct;
    },
    OnHomePageResponseStruct: function() {
        return OnHomePageResponseStruct;
    }
});
const _snapssdk = require("@metamask/snaps-sdk");
const _superstruct = require("superstruct");
const _handlertypes = require("./handler-types");
const SNAP_EXPORTS = {
    [_handlertypes.HandlerType.OnRpcRequest]: {
        type: _handlertypes.HandlerType.OnRpcRequest,
        required: true,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnTransaction]: {
        type: _handlertypes.HandlerType.OnTransaction,
        required: true,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnCronjob]: {
        type: _handlertypes.HandlerType.OnCronjob,
        required: true,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnNameLookup]: {
        type: _handlertypes.HandlerType.OnNameLookup,
        required: true,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnInstall]: {
        type: _handlertypes.HandlerType.OnInstall,
        required: false,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnUpdate]: {
        type: _handlertypes.HandlerType.OnUpdate,
        required: false,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnKeyringRequest]: {
        type: _handlertypes.HandlerType.OnKeyringRequest,
        required: true,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnHomePage]: {
        type: _handlertypes.HandlerType.OnHomePage,
        required: true,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    },
    [_handlertypes.HandlerType.OnSignature]: {
        type: _handlertypes.HandlerType.OnSignature,
        required: true,
        validator: (snapExport)=>{
            return typeof snapExport === 'function';
        }
    }
};
const OnTransactionResponseStruct = (0, _superstruct.nullable)((0, _superstruct.object)({
    content: _snapssdk.ComponentStruct,
    severity: (0, _superstruct.optional)((0, _superstruct.literal)(_snapssdk.SeverityLevel.Critical))
}));
const OnSignatureResponseStruct = OnTransactionResponseStruct;
const OnHomePageResponseStruct = (0, _superstruct.object)({
    content: _snapssdk.ComponentStruct
});

//# sourceMappingURL=handlers.js.map